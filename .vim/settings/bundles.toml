# ---------------------------------------------------------------------------- #
# $HOME/.vim/settings/bundles.toml
# ---------------------------------------------------------------------------- #



# ---------------------------------------------------------------------------- #
# syntax
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_check_on_open = 0

  let g:syntastic_check_on_wq = 0

  let g:syntastic_aggregate_errors = 1

  let g:syntastic_id_checkers = 1

  let g:syntastic_echo_current_error = 1

  let g:syntastic_enable_signs = 1

  let g:syntastic_error_symbol = ">>"
  let g:syntastic_style_error_symbol = ">>"

  let g:syntastic_warning_symbol = ">"
  let g:syntastic_style_warning_symbol = ">"

  let g:syntastic_enable_highlighting = 1

  let g:syntastic_auto_jump = 0

  let g:syntastic_auto_loc_list = 1

  let g:syntastic_loc_list_height = 8

  let g:syntastic_mode_map = {
        \ 'mode': 'active',
        \ 'active_filetypes': [],
        \ 'passive_filetypes': []
        \}

  let g:syntastic_stl_format = "[%E{e: %fe #%e}%B{, }%W{w: %fw #%w}]"
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['Shougo/context_filetype.vim']
hook_add = '''
  let g:context_filetype#filetypes = {
        \ 'typescript' : [
        \   {
        \     'start' : 'template:\s*`',
        \     'end' : '\s*`',
        \     'filetype' : 'html',
        \   },
        \   {
        \     'start' : 'styles:\s*[\s*`',
        \     'end' : '\s*`\s*]',
        \     'filetype' : 'css',
        \   }
        \ ],
        \}
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'pearofducks/ansible-vim'



# ---------------------------------------------------------------------------- #
# completion
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['Shougo/context_filetype.vim']
if = '''has("nvim")'''
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''



# ---------------------------------------------------------------------------- #
# expand
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'tpope/vim-surround'
hook_add = '''
  let g:surround_{char2nr("\<CR>")} = "\n\t\r\n"
'''

[[plugins]]
repo = 'vim-scripts/matchit.zip'

[[plugins]]
repo = 'osyo-manga/vim-jplus'
hook_add = '''
  nmap <Space>J <Plug>(jplus-input)
  vmap <Space>J <Plug>(jplus-input)
'''



# ---------------------------------------------------------------------------- #
# interface
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  " window resize
  call submode#enter_with('winsize', 'n', '', '<C-w>>', '<C-w>>')
  call submode#enter_with('winsize', 'n', '', '<C-w><', '<C-w><')
  call submode#enter_with('winsize', 'n', '', '<C-w>+', '<C-w>+')
  call submode#enter_with('winsize', 'n', '', '<C-w>-', '<C-w>-')
  call submode#map('winsize', 'n', '', '>', '<C-w>>')
  call submode#map('winsize', 'n', '', '<', '<C-w><')
  call submode#map('winsize', 'n', '', '+', '<C-w>+')
  call submode#map('winsize', 'n', '', '-', '<C-w>-')
'''



# ---------------------------------------------------------------------------- #
# diff
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'rickhowe/diffchar.vim'
hook_add = '''
  let g:DiffUnit = "Word3"
  let g:DiffUpdate = 1
'''



# ---------------------------------------------------------------------------- #
# filer
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'cocopon/vaffle.vim'
hook_add = '''
  let g:vaffle_auto_cd = 0
  let g:vaffle_show_hidden_files = 1
  nnoremap <silent> <Space>v :Vaffle<CR>
'''



# ---------------------------------------------------------------------------- #
# utility
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
  vmap <Enter> <Plug>(EasyAlign)
  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'



# ---------------------------------------------------------------------------- #
# git, gist
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'lambdalisue/vim-gista'
hook_add = '''
  " set .vimrc.local
  let g:gista#github_user = $GIT_COMMITTER_NAME

  " TODO: improve
  " nnoremap <silent> [unite]g :<C-u>Unite gista<CR>
'''



# ---------------------------------------------------------------------------- #
# incremental search interface
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['nixprime/cpsm']
hook_add = '''
  noremap [denite] <Nop>
  nmap <Space> [denite]

  "========== denite settings =========="

  call denite#custom#filter(
        \ 'matcher_ignore_globs',
        \ 'ignore_globs',
        \ [
        \   'node_modules/', 'bower_components/', 'tmp/', 'log/',
        \   '.git', '.gitignore'
        \ ]
        \)

  call denite#custom#option(
        \ 'default',
        \ 'auto_resize',
        \ 'true'
        \)

  call denite#custom#map(
        \ 'insert',
        \ '<C-N>',
        \ '<denite:move_to_next_line>',
        \ 'noremap nowait'
        \)

  call denite#custom#map(
        \ 'insert',
        \ '<C-P>',
        \ '<denite:move_to_previous_line>',
        \ 'noremap nowait'
        \)

  call denite#custom#map(
        \ 'insert',
        \ '<Esc>',
        \ '<denite:enter_mode:normal>',
        \ 'noremap nowait'
        \ )

  call denite#custom#map(
        \ 'normal',
        \ '<Esc>',
        \ '<denite:quit>',
        \ 'noremap nowait'
        \)

  "========== source: buffer =========="

  nnoremap <silent> [denite]b :<C-u>Denite buffer<CR>

  "========== source: file_rec =========="

  call denite#custom#source(
        \ 'file_rec',
        \ 'matchers',
        \ ['matcher_cpsm', 'matcher_ignore_globs']
        \)

  call denite#custom#var(
        \ 'file_rec',
        \ 'command',
        \ ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', '']
        \)

  nnoremap <silent> [denite]f :<C-u>Denite file_rec<CR>
  "nnoremap <silent> [denite]fr :<C-u>DeniteProjectDir -path='./' -resume -buffer-name=denite-file -default-action=tabswitch<CR>
  "nnoremap <silent> [denite]fn :<C-u>DeniteProjectDir -path='./' -resume  -buffer-name=denite-file -select=+1 -immediately -statusline=false<CR>
  "nnoremap <silent> [denite]fp :<C-u>DeniteProjectDir -path='./' -resume -buffer-name=denite-file -select=-1 -immediately -statusline=false<CR>

  "nnoremap <silent> [denite]fg :<C-u>DeniteProjectDir -path='./' -default-action=tabswitch file_rec/git<CR>
  "nnoremap <silent> [denite]fk :<C-u>DeniteProjectDir -path='./' -default-action=tabswitch file_rec:..<CR>
  "nnoremap <silent> [denite]ft :<C-u>DeniteProjectDir -path='./' -default-action=tabswitch file_rec:/<CR>
  "nnoremap <silent> [denite]fh :<C-u>DeniteProjectDir -path='./' -default-action=tabswitch file_rec:$HOME<CR>

  "========== source: directory_rec =========="

  call denite#custom#source(
        \ 'directory_rec',
        \ 'matchers',
        \ ['matcher_cpsm', 'matcher_ignore_globs']
        \)

  nnoremap <silent> [denite]d :<C-u>Denite -default-action=open directory_rec<CR>

  "========== source: grep =========="

  call denite#custom#var(
        \ 'grep',
        \ 'command',
        \ ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden']
        \)

  call denite#custom#var(
        \ 'grep',
        \ 'default_opts',
        \ []
        \)

  call denite#custom#var(
        \ 'grep',
        \ 'recursive_opts',
        \ []
        \)

  call denite#custom#source(
        \ 'grep',
        \ 'matchers',
        \ ['matcher_cpsm', 'matcher_ignore_globs']
        \)

  nnoremap <silent> [denite]g :<C-u>Denite grep<CR>
  "nnoremap <silent> [denite]gr :<C-u>DeniteProjectDir -path='./' -resume -buffer-name=denite-grep -default-action=tabswitch<CR>
  "nnoremap <silent> [denite]gn :<C-u>DeniteProjectDir -path='./' -resume -buffer-name=denite-grep -select=+1 -immediately -statusline=false<CR>
  "nnoremap <silent> [denite]gp :<C-u>DeniteProjectDir -path='./' -resume -buffer-name=denite-grep -select=-1 -immediately -statusline=false<CR>

  "========== source: line =========="

  nnoremap <silent> [denite]l :<C-u>Denite line<CR>

'''



# ---------------------------------------------------------------------------- #
# denite/unite additional sources
# ---------------------------------------------------------------------------- #

[[plugins]]
repo = 'junegunn/vim-emoji'

[[plugins]]
repo = 'pocari/vim-denite-emoji'
depends = ['junegunn/vim-emoji', 'Shougo/denite.nvim']
hook_add = '''
  nnoremap <silent> [denite]e :<C-u>Denite emoji<CR>
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = ['Shougo/denite.nvim']
hook_add = '''
  nnoremap <silent> [denite]y :<C-u>Denite neoyank<CR>
'''
