---

# Desktop & Screen Saver

- name: Desktop & Screen Saver
  osx_defaults:
    domain: com.apple.screensaver
    key: idleTime
    type: int
    value: 0
    state: present
  tags: system_preferences



# Dock

- name: Dock tilesize
  osx_defaults:
    domain: com.apple.dock
    key: tilesize
    type: int
    value: "{{ pref_dock.size }}"
    state: present
  tags: system_preferences

- name: Dock magnification
  osx_defaults:
    domain: com.apple.dock
    key: magnification
    type: bool
    value: "{{ pref_dock.zoom }}"
    state: present
  tags: system_preferences

- name: Dock autohide
  osx_defaults:
    domain: com.apple.dock
    key: autohide
    type: bool
    value: "{{ pref_dock.autohide }}"
    state: present
  tags: system_preferences



# Language & Region

- name: languages settings
  osx_defaults:
    key: AppleLanguages
    type: array
    value: "{{ pref_language.languages }}"
  tags: system_preferences

- name: locale settings
  osx_defaults:
    key: AppleLocale
    type: string
    value: "{{ pref_language.locale }}"
  tags: system_preferences



# Security & Privacy

- name: askForPassword
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPassword
    type: int
    value: "{{ 1 if pref_security.ask_for_password else 0 }}"
    state: present
  tags: system_preferences

- name: askForPasswordDelay
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPasswordDelay
    type: float
    value: "{{ pref_security.ask_for_password_delay }}"
    state: present
  tags: system_preferences

- name: FileVault settings (1/2)
  shell: fdesetup isactive
  register: filevault_status
  ignore_errors: True
  changed_when: False
  tags: system_preferences

- name: FileVault settings (2/2)
  shell: fdesetup {{ "enable" if pref_security.filevault else "disable" }}
  when: (pref_security.filevault is defined) and (filevault_status.stdout == "true" and pref_security.filevault != True) or (filevault_status.stdout == "false" and pref_security.filevault == True)
  become: True
  tags: system_preferences



# Keyboard

- name: touchbar functionKeys
  osx_defaults:
    domain: com.apple.touchbar.agent
    key: PresentationModeGlobal
    type: string
    value: "{{ functionKeys if pref_keyboard.touchbar_function_keys else '' }}"
    state: "{{ present if pref_keyboard.touchbar_function_keys else absent }}"
  tags: system_preferences

### input_sources here

- name: Japanese IM LiveConversion
  osx_defaults:
    domain: com.apple.inputmethod.Kotoeri
    key: JIMPrefLiveConversionKey
    type: bool
    value: "{{ pref_keyboard.live_conversion }}"
    state: present
  tags: system_preferences

# Trackpad

- name: Trackpad scroll direction
  osx_defaults:
    key: com.apple.swipescrolldirection
    type: bool
    value: "{{ pref_trackpad.swipescrolldirection }}"
    state: present
  tags: system_preferences



# Bluetooth

- name: Bluetooth off
  osx_defaults:
    domain: com.apple.Bluetooth
    key: ControllerPowerState
    type: int
    value: "{{ 1 if pref_bluetooth else 0 }}"
    state: present
  tags: system_preferences



# Sharing

- name: set ComputerName (1/2)
  shell: scutil --get ComputerName
  register: computername_status
  changed_when: False
  tags: system_preferences

- name: set ComputerName (2/2)
  shell: scutil --set ComputerName "{{ pref_sharing.computer_name }}"
  when: computername_status.stdout != "{{ pref_sharing.computer_name }}"
  tags: system_preferences

- name: set HostName (1/2)
  shell: scutil --get HostName
  register: hostname_status
  ignore_errors: True
  changed_when: False
  tags: system_preferences

- name: set HostName (2/2)
  shell: scutil --set HostName "{{ pref_sharing.computer_name }}"
  when: hostname_status.stdout != "{{ pref_sharing.computer_name }}"
  tags: system_preferences

- name: set LocalHostName (1/2)
  shell: scutil --get LocalHostName
  register: localhostname_status
  ignore_errors: True
  changed_when: False
  tags: system_preferences

- name: set LocalHostName (2/2)
  shell: scutil --set LocalHostName "{{ pref_sharing.computer_name }}"
  when: localhostname_status.stdout != "{{ pref_sharing.computer_name }}"
  tags: system_preferences



# Users & Groups

- name: guest users
  osx_defaults:
    domain: com.apple.loginwindow
    key: GuestEnabled
    type: bool
    value: "{{ pref_users.guestusers }}"
    state: present
  tags: system_preferences



# Others

- name: no .DS_Store
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    value: "{{ pref_others.no_dsstore }}"
    state: present
  tags: system_preferences
